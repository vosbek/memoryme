{
  "name": "devmemory",
  "version": "1.0.3",
  "description": "Enterprise Developer Memory Assistant - Local vector database with LLM integration",
  "main": "dist/main.js",
  "scripts": {
    "dev": "npm run copy-wasm && concurrently \"npm run dev:electron\" \"npm run dev:react\"",
    "dev:full": "npm run copy-wasm && concurrently \"npm run chromadb\" \"npm run dev:electron\" \"npm run dev:react\"",
    "dev:electron": "cross-env NODE_ENV=development electron .",
    "dev:react": "webpack serve --config webpack.renderer.config.js --mode development",
    "chromadb": "python -c \"import chromadb; print('ChromaDB available')\" && python -m chromadb.cli.cli run --path chromadb-data --port 8000 || echo \"ChromaDB not available - install with: pip install chromadb\"",
    "build": "npm run copy-wasm && npm run build:react && npm run build:electron",
    "build:react": "webpack --config webpack.renderer.config.js --mode production",
    "build:electron": "webpack --config webpack.main.config.js --mode production",
    "copy-wasm": "node -e \"const fs = require('fs'); const path = require('path'); const srcDir = 'node_modules/sql.js/dist'; const destDir = 'dist/sql.js/dist'; fs.mkdirSync(destDir, {recursive: true}); fs.readdirSync(srcDir).filter(f => f.endsWith('.wasm')).forEach(f => fs.copyFileSync(path.join(srcDir, f), path.join(destDir, f))); console.log('WASM files copied successfully!');\"",
    "package": "electron-builder",
    "package:win": "electron-builder --win",
    "package:mac": "electron-builder --mac",
    "package:linux": "electron-builder --linux",
    "dist": "npm run build && npm run package",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:unit": "jest --testPathPattern=__tests__/components",
    "test:integration": "jest --testPathPattern=__tests__/integration",
    "test:database": "jest --testPathPattern=__tests__/database",
    "clean": "rimraf dist dist-electron node_modules/.cache",
    "rebuild": "npm run clean && npm install"
  },
  "_scripts_documentation": {
    "description": "DevMemory NPM Scripts Reference",
    "development": {
      "dev": "Basic development mode with legacy vector store",
      "dev:full": "Full development mode with ChromaDB vector search (requires Python + ChromaDB)",
      "dev:electron": "Start only the Electron main process",
      "dev:react": "Start only the React development server",
      "chromadb": "Start only the ChromaDB server on localhost:8000"
    },
    "building": {
      "build": "Full production build (React + Electron)",
      "build:react": "Build only the React renderer process",
      "build:electron": "Build only the Electron main process",
      "copy-wasm": "Copy SQL.js WASM files to dist directory"
    },
    "packaging": {
      "package": "Create platform-specific distributables using electron-builder",
      "package:win": "Create Windows installer (.exe)",
      "package:mac": "Create macOS application (.dmg)",
      "package:linux": "Create Linux packages (.AppImage, .deb)",
      "dist": "Full build + package workflow"
    },
    "testing": {
      "test": "Run all Jest tests",
      "test:watch": "Run tests in watch mode",
      "test:coverage": "Run tests with coverage report",
      "test:ci": "Run tests for CI/CD",
      "test:unit": "Run only component unit tests",
      "test:integration": "Run only integration tests",
      "test:database": "Run only database tests"
    },
    "maintenance": {
      "lint": "Check code style with ESLint",
      "lint:fix": "Fix code style issues automatically",
      "clean": "Remove build artifacts and cache",
      "rebuild": "Clean + reinstall dependencies"
    },
    "prerequisites": {
      "node": "Node.js 18+ required",
      "npm": "npm 8+ required",
      "python": "Python 3.8+ required for ChromaDB",
      "chromadb": "pip install chromadb (optional but recommended)"
    },
    "usage_examples": {
      "fresh_machine": "npm install && npm run build && npm run dev:full",
      "development": "npm run dev:full (with ChromaDB) OR npm run dev (basic)",
      "production": "npm run build && npx electron .",
      "installer": "npm run dist",
      "chromadb_manual": "start-chromadb.bat && npm run dev"
    }
  },
  "keywords": [
    "electron",
    "developer-tools",
    "memory",
    "vector-database",
    "llm",
    "knowledge-management"
  ],
  "author": "Enterprise Developer",
  "license": "MIT",
  "devDependencies": {
    "@eslint/js": "^9.7.0",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.14.0",
    "@types/react": "^18.3.0",
    "@types/react-dom": "^18.3.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.15.0",
    "@typescript-eslint/parser": "^8.15.0",
    "autoprefixer": "^10.4.21",
    "buffer": "^6.0.3",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "crypto-browserify": "^3.12.1",
    "css-loader": "^7.1.2",
    "electron": "^31.0.0",
    "electron-builder": "^24.13.2",
    "eslint": "^9.7.0",
    "eslint-plugin-react": "^7.34.3",
    "eslint-plugin-react-hooks": "^5.2.0",
    "global": "^4.4.0",
    "html-webpack-plugin": "^5.6.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.4",
    "path-browserify": "^1.0.1",
    "postcss": "^8.4.39",
    "postcss-loader": "^8.1.1",
    "process": "^0.11.10",
    "querystring-es3": "^0.2.1",
    "rimraf": "^5.0.7",
    "stream-browserify": "^3.0.0",
    "style-loader": "^4.0.0",
    "tailwindcss": "^3.4.4",
    "ts-jest": "^29.4.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.5.3",
    "url": "^0.11.4",
    "util": "^0.12.5",
    "webpack": "^5.92.1",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.0.4"
  },
  "dependencies": {
    "@aws-sdk/client-bedrock": "^3.614.0",
    "@aws-sdk/client-bedrock-runtime": "^3.614.0",
    "@azure/msal-node": "^2.13.0",
    "@microsoft/microsoft-graph-client": "^3.0.7",
    "@types/sql.js": "^1.4.9",
    "chromadb": "^1.9.2",
    "clsx": "^2.1.1",
    "date-fns": "^3.6.0",
    "electron-store": "^8.1.0",
    "lucide-react": "^0.400.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.24.1",
    "sql.js": "^1.8.0",
    "uuid": "^10.0.0"
  },
  "build": {
    "appId": "com.enterprise.devmemory",
    "productName": "DevMemory",
    "directories": {
      "output": "dist-electron"
    },
    "files": [
      "dist/**/*",
      "package.json",
      "node_modules/**/*"
    ],
    "extraResources": [
      {
        "from": "assets",
        "to": "assets",
        "filter": [
          "**/*"
        ]
      }
    ],
    "mac": {
      "category": "public.app-category.developer-tools",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "icon": "assets/icon.icns"
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ],
      "artifactName": "DevMemory-Setup-${version}.${ext}",
      "publisherName": "Enterprise Development Team",
      "sign": "./scripts/sign-windows.js",
      "signingHashAlgorithms": [
        "sha256"
      ],
      "certificateFile": "certificates/code-signing.p12",
      "certificatePassword": ""
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "Development",
      "icon": "assets/icon.png"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "DevMemory"
    }
  }
}
